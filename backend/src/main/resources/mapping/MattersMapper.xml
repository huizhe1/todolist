<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.huizhe.todo.todolist.mapping.MattersMapper">
  <resultMap id="BaseResultMap" type="xyz.huizhe.todo.todolist.model.Matters">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="xyz.huizhe.todo.todolist.model.Matters">
    delete from matters
    where id = #{id,jdbcType=INTEGER}
    and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xyz.huizhe.todo.todolist.model.Matters" useGeneratedKeys="true" keyProperty="id">
    insert into matters (id, user_id, content, 
      create_date, update_date, status
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="xyz.huizhe.todo.todolist.model.Matters">
    update matters
    set content = #{content,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
    and user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="xyz.huizhe.todo.todolist.model.Matters" resultMap="BaseResultMap">
    select id, content, create_date, update_date, status
    from matters
    where id = #{id,jdbcType=INTEGER}
    user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, content, create_date, update_date, status
    from matters
    where
    user_id = #{userId,jdbcType=INTEGER}
    order by status, id desc
  </select>

  <select id="selectAllByStatus" parameterType="xyz.huizhe.todo.todolist.model.Matters" resultMap="BaseResultMap">
    select id, user_id, content, create_date, update_date, status
    from matters
    where status = #{status,jdbcType=TINYINT}
    and user_id = #{userId,jdbcType=INTEGER}
    and datediff(create_date,now())=0
    order by status, id desc
  </select>

  <select id="selectAllByDate" parameterType="xyz.huizhe.todo.todolist.model.Matters" resultMap="BaseResultMap">
    select id, user_id, content, create_date, update_date, status
    from matters
    where datediff(create_date,#{createDate})=0
    and user_id = #{userId,jdbcType=INTEGER}
    order by status, id desc
  </select>
  <select id="selectAllforSend" resultMap="BaseResultMap">
    select id, user_id, content, create_date, update_date, status
    from matters
    where datediff(create_date,now())= -1
    and user_id = 1
	and status = 0
	order by id desc
  </select>
</mapper>